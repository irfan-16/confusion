{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","registerServiceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","CardImgOverlay","Menu","console","log","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","this","setState","values","toggleModal","JSON","stringify","postComment","dishId","rating","author","comment","Button","outline","onClick","e","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","handleSubmit","Row","Col","md","size","Label","check","select","model","htmlFor","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","React","Component","RenderDish","RenderComment","dishComments","style","border","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","comments","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","href","role","offset","checkbox","RenderLeader","Media","tag","left","middle","object","maxHeight","maxWidth","body","heading","About","leaders","CardHeader","title","list","Header","isNavOpen","toggleNav","bind","handleLogin","event","alert","username","value","password","rememeber","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","data","mesage","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.26cfbc2e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export  const baseUrl = 'http://localhost:3005/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'; \r\nimport {FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard ({item, isLoading, errMess}) {\r\n    //console.log('home item:', item)\r\n    // console.log('isLoading:', isLoading)\r\n    // console.log('errMess:', errMess)\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0,5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg \r\n                    src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? /*if designation exist; show it otherwise \"null\" */ <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n};\r\n\r\nfunction Home (props) {\r\n    //console.log('dishdetail dish:',props.dish)\r\n    //console.log(props.leader)\r\n    // console.log(props.promotion)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading}\r\n                    errMess={props.dishesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                    isLoading={props.promoLoading}\r\n                    errMess={props.promoErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leadersLoading}\r\n                    errMess={props.leadersErrMess} \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from \"reactstrap\";\r\nimport {Link} from 'react-router-dom';\r\n//to fetch image from server\r\nimport { baseUrl } from '../shared/baseUrl'; \r\nimport {Loading} from './LoadingComponent';\r\n\r\n    function RenderMenuItem({dish }) {\r\n        //we no longer take images from local,\r\n        //we take them from server, so no need to store them\r\n        return (\r\n\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image}  alt={dish.name}/>\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n            \r\n        )\r\n        \r\n    } \r\n\r\n    const Menu = (props) => {\r\n        console.log(\"menu props\", props)\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            //console.log(\"menu invoked\", dish)\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish}/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        else \r\n            return (\r\n                \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n        \r\n\r\nexport default Menu;","import React from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, \r\n    Button, Modal, ModalHeader, ModalBody, Label, Row, Col} from \"reactstrap\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends React.Component {\r\n/*we used class bcos we need to store some state info here */\r\n    constructor (props) {\r\n        super(props);\r\n        this.state= {\r\n            isModalOpen:false,\r\n        };\r\n        //this.toggleModal =this.toggleModal.bind(this);\r\n    }\r\n\r\n\r\n    toggleModal(){ //we use setState directly in onClick below\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        console.log('Current state is: ' + JSON.stringify(values));\r\n        // alert('Current state is: ' + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    render () {\r\n\r\n        return(\r\n            <div> \r\n                <div className='mt-2'>\r\n                    <Button outline onClick={(e) => this.setState({isModalOpen: !this.state.isModalOpen})}>\r\n                        <span className='fa fa-pencil fa-lg'></span>Submit Comment\r\n                    </Button>\r\n                 </div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.state.toggleModal}\r\n                    >\r\n                    <ModalHeader toggle={this.state.toggleModal}><h2>Submit Comment</h2></ModalHeader>\r\n                    <ModalBody> \r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>                        \r\n                        <Row className=\"form-group\">\r\n                                <Col md={{size: 12}}>\r\n                                    <Label check><strong>Rating</strong></Label>\r\n                                </Col>\r\n                                <Col md={{size: 12}}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"author\" md={12}><strong>Your Name</strong></Label>\r\n                            <Col md={12}>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Author\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required | ',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"comment\" md={12}><strong>Comment</strong></Label>\r\n                            <Col md={12}>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size:12}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nfunction RenderDish ({dish}) {\r\n    //console.log(\"dish render invoked \", dish)\r\n    if (dish != null) {\r\n        return (\r\n            <div>\r\n                <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0,5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\nfunction RenderComment({dishComments, postComment, dishId}) {\r\n    //console.log(\"render dish invoked \", dishComments)\r\n    //console.log(\"post comment invoked \",postComment)\r\n    if (dishComments != null) {\r\n        return (\r\n            <div >\r\n                <Card >\r\n                        <div className=\"col-md-12 m-1\">\r\n                            <h4>Comments</h4>\r\n                        </div>\r\n                        <Stagger in >\r\n                            {dishComments.map((comment) => {\r\n                            return(      \r\n                                <Fade in>          \r\n                                <div key={comment.id}>\r\n                                    <div style={{border:\"1px solid red\"}}>\r\n                                        <div className=\"row\">\r\n                                            <ul>Comment: {comment.comment}</ul>\r\n                                            <ul>Rate: {comment.rating}</ul>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <ul>-- {comment.author}</ul>\r\n                                            <ul>{new Intl.DateTimeFormat(\"en-US\", {\r\n                                                year: \"numeric\",\r\n                                                month: \"short\",\r\n                                                day: \"2-digit\"\r\n                                                }).format(new Date(comment.date))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                </Fade> \r\n                            )\r\n                            \r\n                        })}\r\n                    </Stagger>\r\n                    <CommentForm dishId={dishId} postComment={postComment}/>\r\n                </Card>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {        \r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container mr-10\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem> \r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div  className=\"col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div  className=\"col-md-5 m-1\">\r\n                        <RenderComment dishComments={props.comments} \r\n                        postComment ={props.postComment}\r\n                        dishId={props.dish.id}\r\n                        />\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button,Label, Col, Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Form,  Errors, } from 'react-redux-form';\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends React.Component {\r\n    \r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     //handleSubmit = this.handleSubmit.bind(this);\r\n    // }\r\n\r\n    \r\n\r\n \r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current state is:' + JSON.stringify(values));\r\n        //alert('Current state is:' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        //this.props.postFeedback(values.id, values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.postFeedback(values);\r\n    }\r\n\r\n\r\n    render () { \r\n        // fetch(`http://localhost:3002/feedback`).then(response => {return response.json()}).then((feedback)=>{\r\n        //     console.log(feedback)\r\n        // })\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem> \r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row row-content'>\r\n                    <div className='col-12'>\r\n                        <h3> Send us your feedback</h3>\r\n                    </div>\r\n                    <div className='col-12 col-md-9'>\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required | ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required | ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required | ',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required | ',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n    \r\n\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader ({leader}) {\n    const imgStyle = {\n        maxHeight: 128,\n        maxWidth: 128,\n      }\n      //console.log('render leaders: ', leader)\n      return(\n        <Fade in>\n            <Media tag=\"li\">\n                <Media left middle>\n                    <Media object src={baseUrl + leader.image} style={imgStyle} alt={leader.name} />\n                </Media>\n                <Media body className=\"ml-5\">\n                <Media heading>{leader.name}</Media>\n                <p>{leader.designation}</p>\n                <p>{leader.description}</p>\n                </Media>\n            </Media>\n        </Fade>\n    )\n}\n\nfunction About(props) {\n\n\n    const leaders = props.leaders.map((leader => {\n        console.log('leader:' ,leader)        \n        return (\n            <div key={leader.id} className=\"col-12 mt-5\">\n               <RenderLeader leader={leader} />\n            </div>\n            \n        );\n    }));\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                   <Stagger in>\n                        <Media list>\n                            {leaders}\n                        </Media>\n                    </Stagger>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, {Component} from 'react';\r\nimport {Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, FormGroup, Input, Label, Form,} from \"reactstrap\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n/*we used class bcos we need to store some state info here */\r\n    constructor (props) {\r\n        super(props);\r\n        this.state= {\r\n            isNavOpen: false,\r\n            isModalOpen:false,\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);/*we use bind instead of arrow function*/\r\n        this.toggleModal =this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n\r\n    toggleNav() {\r\n        this.setState ( {\r\n            isNavOpen: !this.state.isNavOpen /* reverse the status   */\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal()\r\n        alert('username: ' + this.username.value + ' Password:' + this.password.value \r\n        + ' Remember:' + this.rememeber.checked);\r\n        event.preventDefault();\r\n    }\r\n    render () {\r\n        return(\r\n            <React.Fragment> \r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"></NavbarBrand>\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        <NavbarBrand/>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-homa fa-lg\"></span>Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span>About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span>Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-adress-card fa-lg\"></span>Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className='ml-auto' navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className='fa fa-sign-in fa-lg'></span>Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron> {/* to specify some info that can be displayed at the top of header */}\r\n                    <div className=\"container\"> \r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.state.toggleModal}>\r\n                    <ModalHeader toggle={this.state.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody> \r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor='username'>Username</Label>\r\n                                <Input type='text' id='username' name='username' \r\n                                innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor='password'>Password</Label>\r\n                                <Input type='password' id='password' name='password' \r\n                                innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type='checkbox' name='remember' \r\n                                    innerRef={(input) => this.rememeber = input}/>\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type='submit' value='submit' className='bg-primary'>Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\n//action creation supplys data, so we import here \r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n//to create and define an action object\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postFeedback = (values) => (dispatch) => {\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(values),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(function(data){ \r\n        alert('Thank you for your feedback!\\n' + JSON.stringify(data)); \r\n    })    \r\n    .catch(error =>  { \r\n        console.log('post feedback', error.message); \r\n        alert('Your feedack could not be posted\\nError: '+error.message); \r\n    });\r\n};\r\n\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    //to handle response from server \r\n    .then( response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error= new Error('Error ' + response.status + ': ' + response.statusText)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    //if there is no response\r\n    },\r\n    error => {\r\n        var errmess = new Error (error.mesage);\r\n        throw errmess;\r\n    } )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)))\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT ='ADD_COMMENT';\r\nexport const ADD_DISHES ='ADD_DISHES';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const ADD_FEEDBACKS = 'ADD_FEEDBACKS';\r\nexport const FEEDBACKS_FAILED = 'FEEDBACKS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishdetailComponent\";\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent'\r\nimport Footer from './FooterComponent'\r\n// import {DISHES} from \"../shared/dishes\"; we store states at redux store\r\n// import {COMMENTS} from '../shared/comments';\r\n// import {PROMOTIONS} from '../shared/promotions';\r\n// import {LEADERS} from '../shared/leaders'; \r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { postFeedback, postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n      dishes: state.dishes, //these are now available as props\r\n      comments: state.comments,// so we use props below\r\n      promotions: state.promotions,\r\n      leaders: state.leaders,\r\n       \r\n    }\r\n    \r\n}\r\n //addComment as an action is called and dispatched\r\n //to be used as a function by dispatch()\r\n //so addComment can be used as a props\r\nconst mapDispatchToProps =(dispatch) => \r\n({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  // postFeedback: (id, firstname, lastname, telnum, email, agree, contactType, message  ) => \r\n  //   dispatch(postFeedback(id, firstname, lastname, telnum, email, agree, contactType, message )),\r\n  postFeedback: (values) => {dispatch(postFeedback(values))},\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())},\r\n  resetFeedbackForm : () => {dispatch(actions.reset('feedback'))},\r\n\r\n\r\n  \r\n})\r\n\r\n\r\n\r\n\r\n\r\nclass Main extends Component {\r\n  \r\n\r\n  componentDidMount () {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n    //console.log('didmount:', this)\r\n  }\r\n\r\n\r\n  render() {\r\n    // console.log('dish: ', this.props.dishes)\r\n    // console.log('leader: ', this.props.leaders)\r\n    const HomePage = () => {\r\n      return (\r\n        <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadersLoading={this.props.leaders.isLoading}\r\n              leadersErrMess={this.props.leaders.errMess}\r\n          /> \r\n      );\r\n    }\r\n    \r\n    const DishWithId = ({match}) => { /*Route pass 3 props match, location, history */\r\n      //console.log(\"DishWithId invoked\", this.props)\r\n      \r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n        )\r\n    }\r\n    return (\r\n       <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n          <Switch>\r\n            <Route path=\"/home\" component ={HomePage} />\r\n            <Route exact path=\"/menu\" component ={() => <Menu dishes={this.props.dishes} />} /> {/* necessary to pass props */}\r\n            <Route path=\"/menu/:dishId\" component={DishWithId}></Route>\r\n            <Route exact path=\"/contactus\" component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm}/>} />\r\n            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders.leaders} />} />\r\n            <Redirect to=\"home\" />\r\n          </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n//to make props available, we use connect \r\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(Main))); //to connect component to Redux Store\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\n//state should include 3 diff. case\r\n//state is object here not an array, using obj. is more \r\n//easy to update\r\nexport const Dishes = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { \r\n  isLoading: false,\r\n  errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload; \r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; ","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\n//state should include 3 diff. case\r\nexport const Leaders = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: '',\r\n}","import React, { Component } from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport Main from \"./components/MainComponent\";\nimport './App.css';\nimport {Provider} from 'react-redux'; //to make Redux Store available to all component\nimport {ConfigureStore} from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Main />\n        </div> \n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux'; //to allow creaate Redux Store\r\nimport { createForms } from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {Dishes} from './dishes'; //to configure aur store\r\nimport {Comments} from './comments';\r\nimport {Promotions} from './promotions';\r\nimport {Leaders} from './leaders';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store=createStore( //requires parameters Reducer\r\n        combineReducers({\r\n            dishes:Dishes,\r\n            comments:Comments,\r\n            promotions:Promotions,\r\n            leaders:Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback,\r\n            })\r\n        }),\r\n        applyMiddleware(thunk)\r\n    );\r\n\r\n    return store;\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}